{"version":3,"sources":["webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.page.html","webpack:///./src/app/login/login.page.scss","webpack:///./src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEJ;AAEzC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAWF;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAT3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qDAAS,CAAC;SAC1B,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB5B,wJ;;;;;;;;;;;ACAA,+DAA+D,mI;;;;;;;;;;;;;;;;;;;ACAb;AACR;AAC6C;AAOvF;IAEE,mBAAoB,IAAoB,EAAU,QAAkB;QAAhD,SAAI,GAAJ,IAAI,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAU;IAAI,CAAC;IAEzE,4BAAQ,GAAR;IACA,CAAC;IAEK,+BAAW,GAAjB;;;;;;;wBAEI,qBAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;;wBAA3B,SAA2B,CAAC;wBACV,qBAAM,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;;wBAAzC,SAAS,GAAG,SAA6B;wBAC/C,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;wBACtB,IAAG,SAAS,KAAK,QAAQ,EAAC,EAAE,aAAa;4BACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gCACb,QAAQ,EAAE,kBAAkB;gCAC5B,YAAY,EAAE,sBAAsB;gCACpC,aAAa,EAAC,IAAI,CAAE,4BAA4B;6BACnD,CAAC;iCACD,IAAI,CAAC,UAAC,MAAW,IAAK,cAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAnB,CAAmB,CAAC;iCAC1C,KAAK,CAAC,UAAC,KAAU,IAAK,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAAC,CAAC;yBAC1C;;;;wBAID,OAAO,CAAC,KAAK,CAAC,GAAC,CAAC,CAAC;;;;;;KAIpB;IA5BU,SAAS;QALrB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,yFAAgC;;SAEjC,CAAC;+EAG0B,gFAAc,EAAoB,uDAAQ;OAFzD,SAAS,CA6BrB;IAAD,gBAAC;CAAA;AA7BqB","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { FingerprintAIO, FingerprintOptions } from '@ionic-native/fingerprint-aio/ngx';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  constructor(private faio: FingerprintAIO, private platform: Platform) { }\n\n  ngOnInit() {\n  }\n\n  async fingerLogin(){\n    try{\n      await this.platform.ready();\n      const available = await this.faio.isAvailable()\n      console.log(available)\n      if(available === 'finger'){ //for android\n        this.faio.show({\n          clientId: 'Fingerprint-Demo', //Android: Used for encryption. iOS: used for dialogue if no `localizedReason` is given.\n          clientSecret: 'o7aoOMYUbyxaD23oFAnJ',//Necessary for Android encrpytion of keys. Use random secret key.\n          disableBackup:true  //Only for Android(optional)\n      })\n      .then((result: any) => console.log(result))\n      .catch((error: any) => console.log(error));\n      }\n\n    }\n    catch(e){\n      console.error(e);\n\n    }\n\n  }\n}\n"],"sourceRoot":""}